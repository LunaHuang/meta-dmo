From 822a5c06cfea34521b9d41a4aaffcac261fd6627 Mon Sep 17 00:00:00 2001
From: Michael Olbrich <m.olbrich@pengutronix.de>
Date: Mon, 14 May 2012 16:50:21 +0200
Subject: [PATCH 28/40] gstv4l2bufferpool: alloc up to max_buffers when running
 low

This can avoid dead-locks if the buffers are queued elsewhere.

Signed-off-by: Michael Olbrich <m.olbrich@pengutronix.de>
---
 sys/v4l2/gstv4l2bufferpool.c | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

diff --git a/sys/v4l2/gstv4l2bufferpool.c b/sys/v4l2/gstv4l2bufferpool.c
index 03c408d..dad3188 100644
--- a/sys/v4l2/gstv4l2bufferpool.c
+++ b/sys/v4l2/gstv4l2bufferpool.c
@@ -676,6 +676,18 @@ no_buffer:
   }
 }
 
+static gboolean
+mark_meta_pooled (GstBuffer * buffer, GstMeta ** meta, gpointer user_data)
+{
+  GstBufferPool *pool = user_data;
+
+  GST_DEBUG_OBJECT (pool, "marking meta %p as POOLED in buffer %p", *meta,
+      buffer);
+  GST_META_FLAG_SET (*meta, GST_META_FLAG_POOLED);
+
+  return TRUE;
+}
+
 static GstFlowReturn
 gst_v4l2_buffer_pool_acquire_buffer (GstBufferPool * bpool, GstBuffer ** buffer,
     GstBufferPoolAcquireParams * params)
@@ -703,6 +715,15 @@ gst_v4l2_buffer_pool_acquire_buffer (GstBufferPool * bpool, GstBuffer ** buffer,
           /* just dequeue a buffer, we basically use the queue of v4l2 as the
            * storage for our buffers. This function does poll first so we can
            * interrupt it fine. */
+          if ((pool->num_queued <= 1) &&
+              (pool->num_allocated < pool->max_buffers)) {
+            GstBuffer *buf;
+            ret = gst_v4l2_buffer_pool_alloc_buffer (bpool, &buf, NULL);
+            if (ret == GST_FLOW_OK) {
+              gst_buffer_foreach_meta (buf, mark_meta_pooled, bpool);
+              gst_v4l2_buffer_pool_release_buffer (bpool, buf);
+            }
+          }
           ret = gst_v4l2_buffer_pool_dqbuf (pool, buffer);
           break;
 
-- 
1.8.3

