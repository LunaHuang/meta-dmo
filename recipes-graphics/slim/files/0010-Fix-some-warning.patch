From db8ab6bf4d0101f9a2c57e6ae78445d27838e8e2 Mon Sep 17 00:00:00 2001
From: Nobuhiro Iwamatsu <iwamatsu@nigauri.org>
Date: Fri, 22 Mar 2013 13:25:43 +0900
Subject: [PATCH 10/24] Fix some warning

Signed-off-by: Nobuhiro Iwamatsu <iwamatsu@nigauri.org>
---
 cfg.cpp        |  3 ++-
 panel.cpp      | 33 ++++++++++++++++-----------------
 slimlock.cpp   |  2 ++
 switchuser.cpp |  3 +--
 4 files changed, 21 insertions(+), 20 deletions(-)

diff --git a/cfg.cpp b/cfg.cpp
index 75e30f4..09bd88b 100644
--- a/cfg.cpp
+++ b/cfg.cpp
@@ -144,7 +144,8 @@ Cfg::~Cfg() {
  * known options from the given configfile / themefile
  */
 bool Cfg::readConf(string configfile) {
-	int n = -1, pos = 0;
+	int n = -1;
+	unsigned int pos = 0;
 	string line, next, op, fn(configfile);
 	map<string,string>::iterator it;
 	ifstream cfgfile(fn.c_str());
diff --git a/panel.cpp b/panel.cpp
index e8bd29c..0ae727d 100644
--- a/panel.cpp
+++ b/panel.cpp
@@ -372,11 +372,11 @@ unsigned long Panel::GetColor(const char* colorname) {
 }
 
 void Panel::Cursor(int visible) {
-	const char* text;
-	int xx, yy, y2, cheight;
+	const char* text = NULL;
+	int xx = 0, yy = 0, y2 = 0, cheight = 0;
 	const char* txth = "Wj"; /* used to get cursor height */
 
-	if (this->mode == Mode_Lock) {
+	if (mode == Mode_Lock) {
 			text = HiddenPasswdBuffer.c_str();
 			xx = input_pass_x;
 			yy = input_pass_y;
@@ -415,17 +415,14 @@ void Panel::Cursor(int visible) {
 		XDrawLine(Dpy, Win, TextGC,
 				  xx+1, yy-cheight,
 				  xx+1, y2);
-		
 	} else {
-		if (mode == Mode_Lock) {
+		if (mode == Mode_Lock)
 			ApplyBackground(Rectangle(xx+1, yy-cheight,
 				1, y2-(yy-cheight)+1));
-		}
 		else
 			XClearArea(Dpy, Win, xx+1, yy-cheight,
 				1, y2-(yy-cheight)+1, false);
 	}
-
 }
 
 void Panel::EventHandler(const Panel::FieldType& curfield) {
@@ -507,8 +504,8 @@ bool Panel::OnKeyPress(XEvent& event) {
 	char ascii;
 	KeySym keysym;
 	XComposeStatus compstatus;
-	int xx;
-	int yy;
+	int xx = 0;
+	int yy = 0;
 	string text;
 	string formerString = "";
 
@@ -614,9 +611,9 @@ bool Panel::OnKeyPress(XEvent& event) {
 
 	XGlyphInfo extents;
 	XftDraw *draw = XftDrawCreate(Dpy, Win,
-								  DefaultVisual(Dpy, Scr), DefaultColormap(Dpy, Scr));
+			  DefaultVisual(Dpy, Scr), DefaultColormap(Dpy, Scr));
 
-   switch(field) {
+	switch(field) {
 		case Get_Name:
 			text = NameBuffer;
 			xx = input_name_x;
@@ -632,10 +629,12 @@ bool Panel::OnKeyPress(XEvent& event) {
 
 	if (!formerString.empty()){
 		const char* txth = "Wj"; /* get proper maximum height ? */
-		XftTextExtents8(Dpy, font, reinterpret_cast<const XftChar8*>(txth), strlen(txth), &extents);
+		XftTextExtents8(Dpy, font,
+				reinterpret_cast<const XftChar8*>(txth), strlen(txth), &extents);
 		int maxHeight = extents.height;
 
-		XftTextExtents8(Dpy, font, reinterpret_cast<const XftChar8*>(formerString.c_str()),
+		XftTextExtents8(Dpy, font,
+				reinterpret_cast<const XftChar8*>(formerString.c_str()),
 						formerString.length(), &extents);
 		int maxLength = extents.width;
 		
@@ -650,9 +649,9 @@ bool Panel::OnKeyPress(XEvent& event) {
 
 	if (!text.empty()) {
 		SlimDrawString8 (draw, &inputcolor, font, xx, yy,
-						 text,
-						 &inputshadowcolor,
-						 inputShadowXOffset, inputShadowYOffset);
+				 text,
+				 &inputshadowcolor,
+				 inputShadowXOffset, inputShadowYOffset);
 	}
 
 	XftDrawDestroy (draw);
@@ -670,7 +669,7 @@ void Panel::ShowText(){
 	input_name_y == input_pass_y;
 
 	XftDraw *draw = XftDrawCreate(Dpy, Win,
-								  DefaultVisual(Dpy, Scr), DefaultColormap(Dpy, Scr));
+		  DefaultVisual(Dpy, Scr), DefaultColormap(Dpy, Scr));
 	/* welcome message */
 	XftTextExtents8(Dpy, welcomefont, (XftChar8*)welcome_message.c_str(),
 					strlen(welcome_message.c_str()), &extents);
diff --git a/slimlock.cpp b/slimlock.cpp
index 6d29cd9..fed08d5 100644
--- a/slimlock.cpp
+++ b/slimlock.cpp
@@ -367,4 +367,6 @@ void* RaiseWindow(void *data) {
         XRaiseWindow(dpy, win);
         sleep(1);
     }
+
+	return (void *)0;
 }
diff --git a/switchuser.cpp b/switchuser.cpp
index 83edb0d..01aa68a 100644
--- a/switchuser.cpp
+++ b/switchuser.cpp
@@ -51,10 +51,9 @@ void SwitchUser::Execute(const char* cmd) {
 }
 
 void SwitchUser::SetClientAuth(const char* mcookie) {
-	bool r;
 	string home = string(Pw->pw_dir);
 	string authfile = home + "/.Xauthority";
 	remove(authfile.c_str());
-	r = Util::add_mcookie(mcookie, ":0", cfg->getOption("xauth_path"),
+	Util::add_mcookie(mcookie, ":0", cfg->getOption("xauth_path"),
 	  authfile);
 }
-- 
1.8.3.4

